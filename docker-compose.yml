services:
  mariadb:
    container_name: ${COMPOSE_PROJECT_NAME}_mariadb
    build:
      context: .
      dockerfile: Dockerfile_mariadb
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: school_db
      MYSQL_USER: flask_user
      MYSQL_PASSWORD: flask_password
    networks:
      - app-network

  flask_app:
    container_name: ${COMPOSE_PROJECT_NAME}_flask_app
    build:
      context: .
      dockerfile: Dockerfile_flask
    ports:
      - "5000:5000"
    depends_on:
      - mariadb
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
    networks:
      - app-network

  flask-tests:
    container_name: ${COMPOSE_PROJECT_NAME}_flask_tests
    build:
      context: .
      dockerfile: Dockerfile_flask
    command: ["python", "-m", "unittest", "test_app.py"]
    depends_on:
      - mariadb
    networks:
      - app-network

  prometheus:
    container_name: ${COMPOSE_PROJECT_NAME}_prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - flask_app
    networks:
      - app-network

  grafana:
    container_name: ${COMPOSE_PROJECT_NAME}_grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network
    volumes:
      - grafana_data:/var/lib/grafana

  jenkins:
    container_name: ${COMPOSE_PROJECT_NAME}_jenkins
    build:
      context: .
      dockerfile: Dockerfile_jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    restart: unless-stopped
    networks:
      - app-network

volumes:
  db_data:
  grafana_data:
  jenkins_home:

networks:
  app-network:
    driver: bridge
